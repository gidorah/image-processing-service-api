services:

  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - .:/app
      - ./logs:/var/log/django # Mount volume for Django Logs.
    depends_on:
      - elasticsearch
    environment:
      - REMOTE_DEBUGGING_PORT=5678
      - CELERY_BROKER_URL=redis://@redis:6379/0
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server

  worker:
    build:
      context: .
      dockerfile: ./compose/local/worker/Dockerfile
    command: celery -A image_processing_service worker -l info --hostname=image_processing_worker@%%h
    environment:
      - DJANGO_SETTINGS_MODULE=image_processing_service.settings
      - CELERY_BROKER_URL=redis://@redis:6379/0
      - DB_HOST=db
    volumes:
      - .:/app

  # beat:
  #   build: .
  #   command: celery -A image_processing_service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   environment:
  #     - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
  #   depends_on:
  #     - redis
  #     - db
  #   volumes:
  #     - .:/app

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1 # Use a specific version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node  # For single-node development setup
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Limit memory usage (adjust as needed)
      - xpack.security.enabled=false # Disable security for local dev; ENABLE IN PRODUCTION!
      - cluster.routing.allocation.disk.threshold_enabled=false #Prevent errors in dev environments
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data  # Persistent Elasticsearch data
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1  # Match Elasticsearch version
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1  # Match Elasticsearch version
    container_name: filebeat
    user: root # Required to access Docker socket and host paths
    volumes:
      - ./elk/local/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro  # Mount Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro #Access docker socket for metadata
      - ./logs:/var/log/django:ro # Access Django logs.
    depends_on:
      - elasticsearch

volumes:
  postgres-data: {}
  redis_data: {}
  esdata:  # Named volume for Elasticsearch data
    driver: local
