services:

  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - .:/app
    environment:
      - REMOTE_DEBUGGING_PORT=5678
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.image_processing_worker
  #   command: celery -A image_processing_service worker -l info --hostname=image_processing_worker@%%h
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=image_processing_service.settings
  #     - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
  #   volumes:
  #     - .:/app

  # beat:
  #   build: .
  #   command: celery -A image_processing_service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   environment:
  #     - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
  #   depends_on:
  #     - redis
  #     - db
  #   volumes:
  #     - .:/app

volumes:
  postgres-data: {}
  redis_data: {}
